<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAL5rBgC+awYAvGkGB7toBgu7aAYLumgGC7pnBwu5ZwcLuGcHC7hmBwm4ZgcBuGYHAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA1HgAANR3AALTewUK4pYoC+CVKgvfkygL35IoC96RJwvdkScL3pAnC9+S
        KAvfkigL35IoB9+SKADfkigAu2kGALtoBj67aAa2umgGxLpoBsO5ZwfDuWcHw7hnB8O4ZgfDt2YHvrdm
        B1nBcAcAtmUHAAAAAAAAAAAAAAAAANR4AADUeAAO1HgAfs51AMLQgBLE35UoxOCVKcTglCnE4JQpxN+T
        KMTfkijE35Iow9+SKMTfkii235IoPt+SKAC6aAYAumgGlrpoB/+5Zwf/uWcH/7hmB/+3Zgf/t2YH/7Zl
        B/+2ZQf/tWUIz7VkCBa1ZAgAAAAAANR4AADUeAAA1HgAEdR4AJfTeAD7y3MA/8FxB//ckyb/4Zcq/+GW
        Kf/glSn/4JUp/+CUKf/fkyj/35Mo/9+SKP/fkiiW35IoALhnBwC4ZwdvuGYH/7dmB/+3Zgf/tmUH/7Zl
        B/+1ZQj/tWQI/7RkCP+0ZAj3s2MISrNjCADUeAAA1HgAANR4ABbUeACi1HgA/dJ3AP/FbwD/wHQM/+CX
        Kf/imSr/4Zgq/+GXKv/hlyr/4JYp/+CVKf/glCn/4JQp/9+TKG/glCkAt2YHALdmBy62ZQfptmUH/7Vl
        CP+1ZAj/tGQI/7RkCP+zYwj/smMI/7JjCP+xYgiSzmcAANF2AQDUeAAc1HgArdR4AP7UeAD/z3UA/79s
        AP/Mgxn/45ws/+KbK//imiv/4pkr/+GZKv/hmCr/4Zcq/+GWKv/glinp4JUpLuCVKQC1ZQcAtmUHCLVk
        CLS0ZAj/tGQI/7NjCP+yYwj/smMI/7FiCP+xYgn/sGIJ/7BhCdKtXwoW1nkAItR4ALjUeAD/1HgA/9N4
        AP/LcwD/vG0E/9mTJf/kniz/450s/+OcK//imyv/4por/+KaK//imSr/4Zgq/+GYKrThlioI4ZcqALRk
        CACzYwgAs2MIbbJjCP+yYwj/sWII/7FiCf+wYgn/sGEJ/69hCf+vYQn/rWAJ9rtpBnXVeAC+1HgA/9R4
        AP/UeAD/0ncA/8VvAP/Bdw7/4p4s/+SfLf/kniz/454s/+OdLP/jnCz/45wr/+KbK//imiv/4porbeKa
        KwDhmCoAAAAAALFiCACxYggssWIJ57BiCf+wYQn/r2EJ/69hCf+uYAn/rWAJ/6xfCf+0ZAf/zXQC9tR4
        AP7UeAD/1HgA/9R4AP/PdQD/v2wA/82HG//moy7/5aEt/+SgLf/koC3/5J8t/+OeLP/jnSz/450s/+Oc
        LOfjmyss45wrAAAAAAAAAAAAsGEJALBhCQevYQmyr2EJ/65gCf+uYAn/rV8J/6xfCv+rXgr/tWUI/810
        Av/UeAD/1HgA/9R4AP/UeAD/03gA/8tyAP+9bgX/25kn/+akLv/loy7/5aIu/+WiLf/koS3/5KAt/+Sf
        Lf/knyz/454ssuOdLAfjnSwAAAAAAAAAAACvYQkArWAJAK1gCWqtXwn/rF8J/6xfCv+rXgr/q14K/7Vl
        B//PdQH/1XkA/9V4AP/VeAD/1HgA/9R4AP/SdwD/xG8A/8J5D//kpC7/5qYv/+alL//mpC7/5aMu/+Wj
        Lv/loi7/5aEt/+ShLf/koC1q5KAtAOSfLAAAAAAAAAAAAAAAAACsXwoArF8KKqteCuarXgr/ql4K/6pd
        Cv+pXQr/vWoF/810Av/McwL/zHMC/850AvTUeADU1HgA0891ANO/bADU0Y4e9OipMf/npzD/56cv/+am
        L//mpS//5qUv/+akLv/loy7/5aIu5uWiLirloi4AAAAAAAAAAAAAAAAAAAAAAKpeCgCrXgoGql0Kr6ld
        Cv+pXQr/qFwK/6dcC/+oXQv/ql0K/6ldCv+pXQr/qV0K3LlnBi7YewASy28AEtWPHS7mqTDc6Kow/+ip
        MP/nqTD/56gw/+enL//npy//5qYv/+alL//mpS+v5aMtBuWkLgAAAAAAAAAAAAAAAAAAAAAAqV0KAKhc
        CwCoXAtnp1wL/qdcC/+mWwv/plsL/6VbC/+kWgv/pFoL/6NZDP+jWQz5olkMUaNZDADprTIA6a4yUemt
        MfnprDH/6Ksx/+irMf/oqjD/6Kkw/+eoMP/nqDD/56cv/uemL2fnpy8A5qUvAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAplsLAKZbCymmWwvkpVsL/6VaC/+kWgv/pFoL/6NZDP+iWQz/olgM/6FYDP+hWAyaj0UFAffE
        PAHqrzKa6q8y/+muMv/prTL/6awx/+isMf/oqzH/6Kox/+iqMP/nqTDk56gwKeeoMAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAClWgsApVoLBqRaC62kWgv/o1kM/6JZDP+iWQz/oVgM/6FYDP+gVwz/oFcM/59X
        DNiXTwoa8Lg2GuqxM9jqsDP/6rAy/+qvMv/prjL/6a4y/+mtMf/prDH/6Ksx/+irMa3oqTAG6KowAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKNaCwCiWQwAolkMZaJZDP6hWAz/oVgM/6BXDP+gVwz/n1cM/59W
        Df+eVg3/m1UN+pJNC1DvuDZQ67M0+uuyM//rsjP/6rEz/+qwM//qsDL/6q8y/+muMv/prTL+6a0xZemt
        MQDorDEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKFYDAChWAwnoFcM46BXDP+fVwz/n1YN/55W
        Df+eVg3/nVUN/5xVDf+XUg3/kE8Mnuq0NJ7stTT/7LQ0/+u0NP/rszT/67Iz/+uxM//qsTP/6rAz/+qv
        MuPqrzIn6q8yAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn1cMAKBYDAWfVg2qnlYN/55W
        Df+dVQ3/nFUN/5xVDf+bVA3/mlQN/5JPDf+SVhHs5K4y7O23Nf/stjX/7LU0/+y1NP/stDT/67M0/+uz
        M//rsjP/67EzqumwMwXqsDMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACeVg4AnVUNAJ1V
        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
        AP//AAD//wAA//+AAf//gAH//8AD//////8=
</value>
  </data>
</root>